{"version":3,"sources":["model/UserModel.jsx","utils/Utils.jsx","components/LoginComponent.jsx","model/MoodModel.jsx","components/MoodCardComponent.jsx","components/MoodGallery.jsx","components/RateMoodComponent.jsx","pages/HomePage.jsx","pages/Solutions.jsx","pages/SignUp.jsx","utils/ActiveUserContext.jsx","model/UserMoodsModel.jsx","pages/MoodChartsPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["UserModel","parseUser","this","email","get","id","name","getUsername","role","key","Utils","Parse","serverURL","initialize","d","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","LoginComponent","onLogin","useState","activeUser","setEmail","pwd","setPwd","showInvalidLogin","setShowInvalidLogin","loggingIn","setLoggingIn","console","log","to","className","Alert","variant","onClose","dismissible","Form","Group","controlId","Label","Control","type","placeholder","value","onChange","e","target","Text","Button","parseInit","User","logIn","then","user","localStorage","setItem","JSON","stringify","catch","err","error","finally","Spinner","animation","MoodModel","image","title","rate","MoodCardComponent","mood","onCardClick","Card","style","cursor","onClick","Img","src","alt","Body","Title","MoodGallery","moods","moodHtml","map","RateMoodComponent","Date","customDate","setCustomDate","isRated","setIsRated","navigateGraphs","content","Container","display","moodRate","moodDate","userMood","Object","extend","set","save","message","saveToChart","FormGroup","dateFormat","HomePage","setActiveUser","redirectOnLogin","setRedirectOnLogin","useEffect","setTimeout","divHelloActive","rateMood","border","usr","activeUsr","SolutionsPage","props","width","padding","Carousel","Item","alert","interval","Caption","SignUp","setName","href","required","disable","signUp","ActiveUserContext","createContext","UserMoodsModel","userModel","MoodChartsPage","selectedUser","setSelectedUser","userMoods","setUserMoods","userEmailToDisplay","setUserEmailToDisplay","failedToFetchUser","setFailedToFetchUser","labels","datasets","label","data","backgroundColor","hoverBackgroundColor","borderWidth","borderColor","setData","bar","useMemo","maxHeight","query","Query","equalTo","select","find","code","dates","rates","length","dataCln","fetchMoodsByUser","onSubmit","preventDefault","usrArr","height","options","legend","App","Provider","exact","path","Solutions","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4eee6983.chunk.js","sourcesContent":["\nclass UserModel {\n \n    constructor(parseUser){\n        this.email = parseUser.get(\"email\");\n        this.id = parseUser.id;\n        this.name = parseUser.getUsername();\n        this.role = parseUser.get(\"role\");\n        this.key = parseUser.id;\n\n    }\n}\n\nexport default UserModel;","import Parse from 'parse';\n\nclass Utils{\n    \n    static parseInit(){\n        // Hunny keys:\n        // const PARSE_APPLICATION_ID = 'IE6u59r2UOS1JwKu5Wr5o7dbiVQMzxsIqUnx9xl1';\n        // const PARSE_HOST_URL = 'https://parseapi.back4app.com/';\n        // const PARSE_JAVASCRIPT_KEY = '9eKPlczqhsvxqyTKqKKu4qkTaNSAuSNV3pP6vmls';\n        \n        // Hunny2 keys:\n        \n\n        const PARSE_APPLICATION_ID = 'diGq711AFYl6nzB3FASUfc0R8Yk0eKwW0A2HfLl5';\n        const PARSE_HOST_URL = 'https://parseapi.back4app.com/';\n        const PARSE_JAVASCRIPT_KEY = 'qxSgb6hrFcMHEfJrcVqI8TxzxSzMzKdpltnZCne5';\n        \n        Parse.serverURL = PARSE_HOST_URL;\n        Parse.initialize(PARSE_APPLICATION_ID, PARSE_JAVASCRIPT_KEY);\n    }\n\n\n\tstatic dateFormat(d){\n\t\tlet ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(d);\n\t\tlet mo = new Intl.DateTimeFormat('en', { month: 'short' }).format(d);\n\t\tlet da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(d);\n\t\treturn `${da}/${mo}/${ye}`;\n\t}\n\n}\n\nexport default Utils;","import React from 'react';\nimport { useState } from 'react';\nimport { Button, Form, Alert, Spinner } from 'react-bootstrap';\nimport { Link, Redirect } from 'react-router-dom';\n//import './LoginComponent.css';\nimport UserModel from '../model/UserModel';\nimport Parse from 'parse';\nimport Utils from '../utils/Utils';\n\nfunction LoginComponent({onLogin}) {\n    const [activeUser, setActiveUser] = useState();\n    const [email, setEmail] = useState();\n    const [pwd, setPwd] = useState();\n    const [showInvalidLogin, setShowInvalidLogin] = useState(false);\n    const [loggingIn, setLoggingIn] = useState(false);\n\n    if (activeUser) {\n        console.log('is active!'+activeUser.name);\n        return <Redirect activeUser={activeUser} to=\"/\"/>;\n    }\n\n    function login() {\n        setLoggingIn(true);\n\n        Utils.parseInit();\n\n        Parse.User.logIn(email, pwd).then(user => {\n            \n            // Invoke parent (App) function to update the activeUser state in the app\n            localStorage.setItem(\"activeUser\", JSON.stringify(activeUser));\n            \n            onLogin(user);\n            //<Redirect to=\"/rate\" activeUser={user} />\n\n        }).catch(err => {\n            console.error(err);\n            // Showing an alert\n            console.log(err);\n            setShowInvalidLogin(true);            \n        }).finally(() => {\n            setLoggingIn(false);\n        });\n    }\n\n//     function loginJsons() {\n//         setLoggingIn(true);\n//         fetch('.././data/users.json').then(response => response.json()).then(data => {\n    \n//               const activeUsers = data.filter(\n//                 function(data){ \n//                    return data.email === email && data.pswrd === pwd;}\n//             );\n//              if(activeUsers){\n//                  // set active user , add to users collection etc ...:\n//                  var activeUsrJson = activeUsers[0];\n//                  console.log(activeUsrJson);\n//                  var activeUsr = new UserModel(activeUsrJson); \n//                 onLogin(activeUsr);\n//                 // \n//                 setActiveUser(activeUsr);\n//                 setLoggingIn(false);\n//              }else{\n//                 setShowInvalidLogin(true);  \n//              }}).catch(err => {\n//         console.error(err);\n//         // Showing an alert\n//         setShowInvalidLogin(true);\n//         setLoggingIn(false);            \n//     });\n// }\n\n    return (\n        \n        <div className=\"p-login\">\n            <h1>Login to Happy app </h1>\n            <p>or <Link to=\"/signup\">create an account</Link></p>\n            {showInvalidLogin ?\n                <Alert variant=\"danger\" onClose={() => setShowInvalidLogin(false)} dismissible>Invalid Credentials!</Alert> : null}\n            <Form >\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" \n                        value={email || ''} onChange={e => setEmail(e.target.value)} />\n                    <Form.Text className=\"text-muted\">\n                        We'll never share your email with anyone else.\n                    </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" \n                        value={pwd || ''} onChange={e => setPwd(e.target.value)} />\n                </Form.Group>\n                <div className=\"d-grid gap-2\">\n                    <Button type=\"submit\" variant=\"success\" type=\"button\" onClick={login} disabled={loggingIn}>\n                        Login {loggingIn ? <Spinner animation=\"border\" /> : null}\n                    </Button>\n                </div>\n            </Form>\n        </div>\n    );\n}\n\nexport default LoginComponent;","class MoodModel{\n    \n    constructor(image,title,rate){\n        this.image = image;\n        this.title = title;\n        this.rate = rate;\n        this.key = title+\"_\"+rate;\n    }\n}\n\nexport default MoodModel;","import React from \"react\";\nimport './CardComponent.css'; \nimport Card from 'react-bootstrap/Card'\n\nfunction MoodCardComponent({mood,onCardClick}) {\n\t\n\treturn (\n \n<Card>\n<a style={{ cursor: 'pointer' }}  onClick={()=>onCardClick(mood.rate)}>\n<Card.Img variant=\"top moodImg\"  src={mood.image} alt={mood.title+\" \"+mood.rate} />\n<Card.Body>\n  <Card.Title>{mood.title} ({mood.rate})</Card.Title>\n  \n</Card.Body>\n</a>\n</Card>\n\t)\n}\n\nexport default MoodCardComponent;\n","import React from \"react\";\nimport './CardComponent.css'; \nimport MoodCardComponent from \"./MoodCardComponent\";\n\nfunction MoodGallery({moods,activeUser,onCardClick}){\n\n    // function goToChartsOrSolutions(){\n\n    //     if(activeUser.role === 'Admin'){\n\n    //         // redirect to .. charts page..\n    //     }else{\n    //         //redirect to carousel...\n    //     }\n    // }\n\n    let moodHtml = moods.map(mood=><MoodCardComponent onCardClick={()=>onCardClick(mood.rate)} key={mood.key+\"1\"} mood={mood}/>)\n\n\nreturn(\n<div className=\"gallery\">\n    {moodHtml}</div>\n\n\n)\n\n}\n\nexport default MoodGallery;","import React, { useEffect, useState } from 'react';\nimport { Container,Button, FormGroup, Form } from 'react-bootstrap';\nimport MoodModel from '../model/MoodModel';\nimport MoodGallery from './MoodGallery';\nimport LoginComponent from './LoginComponent';\nimport Parse from 'parse';\nimport Utils from '../utils/Utils';\nimport { Redirect } from 'react-router';\nimport Alert from 'react-bootstrap/Alert';\nimport { Link } from \"react-router-dom\"; \n\nfunction RateMoodComponent({activeUser}) {\n \n    const [customDate,setCustomDate] = useState(new Date());\n    const [isRated,setIsRated] = useState(false);\n    const [moods,setMoods] = useState([new MoodModel(\"./crying_cloud.png\",\"Depressed\",1)\n    ,new MoodModel(\"./mad_sad_cloud.png\",\"Sad\",2)\n    ,new MoodModel(\"./mad_cloud2.jpg\",\"Angry\",3) \n\n    ,new MoodModel(\"./indifferent_sunshine.jpg\",\"Ok\",5),\n    ,new MoodModel(\"./partially_cloudy.png\",\"Optmistic\",8)\n    ,new MoodModel(\"./sunshine.jpg\",\"Quite Happy\",9),\n    ,new MoodModel(\"./happy_sunshine.jpg\",\"Happy\",10)])\n\n    function saveToChart(moodRate,moodDate){\n\n        // todo: fix the init..\n        // Your Parse initialization configuration goes here\n        Utils.parseInit();\n        console.log('saveToChart');\n        const userMoods = Parse.Object.extend(\"UserMoods\");\n        const userMood = new userMoods();\n\n        console.log(moodDate);\n        userMood.set(\"userId\", activeUser.id);\n        userMood.set(\"moodDate\", moodDate);\n        userMood.set(\"email\", activeUser.email);\n        userMood.set(\"moodRate\", moodRate);\n\n        userMood.save()\n        .then((mood) => {\n        // Success\n        console.log('New object created with objectId: ' + mood.id);\n        setIsRated(true);\n        }, (error) => {\n        // Save fails\n        console.log('Failed to create new object, with error code: ' + error.message);\n        });\n    }\n\n    const navigateGraphs = (activeUser && activeUser.role === 'admin' ? \n    <Link className=\"link link-primary\"   to=\"/graphs\" >Go To Mood Graphs</Link> : null);\n\n    const content = (    \n        <Container>\n            <h3  >Hello {activeUser.name}!</h3> \n<h6>Please choose your current mood to rate it (on click)</h6>\n\n<Alert style={{display:(!isRated? \"none\" : \"block\")}} className=\"alert alert-secondary\"><h4>Thank You!</h4>\n<p>\n<Link className=\"button button-primary\" to=\"/solutions\"> Checkout suggested solutions</Link>\n             \n     {navigateGraphs}\n</p>\n</Alert>\n<div style={{display:(isRated? \"none\" : \"block\")}} >\n             <MoodGallery  onCardClick={(moodRate)=>saveToChart(moodRate,customDate)} moods={moods} activeUser={activeUser}/>\n              <FormGroup>\n                <Form.Label>Custom Date:</Form.Label>\n                <Form.Control type=\"date\" placeholder={Utils.dateFormat(customDate)} onChange={e=>setCustomDate(new Date(e.target.value))}  />\n \n                </FormGroup>; \n                </div>   </Container>);\n\nreturn (       \n    \n    <div className=\"p-home\">\n    {content}\n        </div>\n);\n}\n\nexport default RateMoodComponent;","import React, { useEffect, useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Container } from 'react-bootstrap';\nimport { Spinner } from 'react-bootstrap';\nimport  { Redirect } from 'react-router-dom';\nimport LoginComponent from '../components/LoginComponent';\nimport  RateMoodComponent  from '../components/RateMoodComponent';\nimport UserModel from '../model/UserModel';\n\nfunction HomePage() {\n\n    const [activeUser,setActiveUser] = useState();\n    const [redirectOnLogin,setRedirectOnLogin] = useState(false);  // todo: initially read all users data.\n\n    function addActiveUser(usr){\n\n      const activeUsr = new UserModel(usr);\n      console.log(\"activeUsr:\"+activeUsr.email);\n      setActiveUser(activeUsr);\n       \n    }\n    useEffect(()=>{\n      if(activeUser){\n      setTimeout(function(){ \n        setRedirectOnLogin(true);\n      }, 3000);\n    }\n    },[activeUser]);  \n\n    const divHelloActive = activeUser ? (<div>\n      <h3>Hello {activeUser.name}!</h3>\n      <p>Please wait...</p>\n      <Spinner animation=\"border\" role=\"status\">\n     \n      <span className=\"visually-hidden\">Please Wait...</span>\n      </Spinner>\n    \n      </div>) : null;\n    \n     \n \n    const rateMood = (redirectOnLogin ? <RateMoodComponent activeUser={activeUser} /> : null)\n    return (\n      \n<div>\n<div style={{border:\"1px solid black\",\n               display:(activeUser? \"none\" : \"block\")}} >\n             <Container>\n                 <h1  >Happy App</h1>\n                <p>Find your way</p> <div>\n                  <img src=\"./syzipus.jpeg\" alt=\"syzipus\" />\n                </div> <p>Let the stone of obligations be lighter..</p>\n               <div style={{border:\"1px solid black\",\n               display:(activeUser? \"none\" : \"block\")}}> \n                <LoginComponent activeUser={activeUser} onLogin={addActiveUser}/>\n\n                </div>\n                {divHelloActive}\n\n            </Container>  \n            </div>\n            {rateMood}\n            </div>\n            \n    );\n}\n\nexport default HomePage;    ","import \"bootstrap/dist/css/bootstrap.css\";\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\nimport { Container, Tabs } from 'react-bootstrap';\nimport MoodModel from '../model/MoodModel';\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Carousel from 'react-bootstrap/Carousel';\n\nfunction SolutionsPage(props) {\n \n\n\nreturn (\n\t<div style={{ display: 'block', width: 700, padding: 30 }}>\n\t<h4>What would you like to do today?</h4>\n  \n\t<Carousel>\n\t\t<Carousel.Item onClick={()=>alert('Surprise!')} interval={1500}>\n\t\t<h3>Surprise me!</h3>\n\t\t<img \n\t\t\tclassName=\"d-block w-100\"\nsrc=\"./surprise.jpeg\"\t\t\talt=\"Surprise me\"\n\t\t/>\n\t\t<Carousel.Caption>\n\t\t\t<h3>Surprise me!</h3>\n\t\t\t \n\t\t</Carousel.Caption>\n\t\t</Carousel.Item>\n\t\t<Carousel.Item onClick={()=>alert('Rand me a song!!')}  interval={500}>\n\t\t<h3>Find me a song!</h3>\n\t\t<img\n\t\t\tclassName=\"d-block w-100\"\nsrc=\"./song.jpg\"\n\t\t\talt=\"Find me a song!\"\n\t\t/>\n\t\t<Carousel.Caption>\n\t\t\t<h3>Find me a song!</h3>\n\t\t\t \n\t\t</Carousel.Caption>\n\t\t</Carousel.Item>\n        <Carousel.Item interval={500} onClick=\"alert('Rand an activity!')\">\n\t\t<h3>Find me an activity!</h3>\n\t\t<img\n\t\t\tclassName=\"d-block w-100\"\nsrc=\"./activity.jpg\"\t\t\talt=\"Find me an activity!\"\n\t\t/>\n\t\t<Carousel.Caption>\n\t\t\t<h3>Find me an activity!</h3>\n\t\t\t \n\t\t</Carousel.Caption>\n\t\t</Carousel.Item>\n        <Carousel.Item interval={500}>\n\t\t<h3>Meet people!</h3>\n\t\t<img onClick={()=>alert('Meet People!')} \n\t\t\tclassName=\"d-block w-100\"\nsrc=\"./meeting_people2.jpg\"\n\t\t\talt=\"Meeting people!\"\n\t\t/>\n\t\t<Carousel.Caption>\n\t\t\t<h3>Meeting people!</h3>\n\t\t\t \n\t\t</Carousel.Caption>\n\t\t</Carousel.Item> \n        <Carousel.Item onClick={()=>alert('Something Bumpy!')} interval={500}>\n\t\t\t<h3>Something Bumpy!</h3>\n\t\t<img \n\t\t\tclassName=\"d-block w-100\"\nsrc=\"./bumpy.jpg\"\n\t\t\talt=\"Something Bumpy!\"\n\t\t/>\n\t\t<Carousel.Caption>\n\t\t\t<h3>Something Bumpy</h3>\n\t\t\t \n\t\t</Carousel.Caption>\n\t\t</Carousel.Item> \n        <Carousel.Item onClick=\"alert('Calm!')\" interval={500}>\n\t\t<h3>Something Calm</h3>\n\t\t<img\n\t\t\tclassName=\"d-block w-100\"\nsrc=\"./something_calm.jpg\"\n\t\t\talt=\"something calm\"\n\t\t/>\n\t\t<Carousel.Caption>\n\t\t\t<h3>Something Calm</h3>\n\t\t\t \n\t\t</Carousel.Caption>\n\t\t</Carousel.Item>\n\t</Carousel>\n\t</div>\n);\n}\n\nexport default SolutionsPage;","import React, { useState } from 'react';\nimport  { Redirect } from 'react-router-dom';\nimport Parse from 'parse';\nimport { Container, Form } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport UserModel from '../model/UserModel';\nimport Utils from '../utils/Utils';\nimport Alert from 'react-bootstrap/Alert';\n\nfunction SignUp(){\n    const [email, setEmail] = useState();\n    const [name, setName] = useState();\n    const [activeUser, setActiveUser] = useState();\n    const [pwd, setPwd] = useState();\n \n    if (activeUser) {\n        console.log('is active!');\n        return <Redirect to=\"/\"/>\n    }\n\n    function signup() {\n    \n        console.log(\"In signup!!!\");\n        Utils.parseInit();\n        var user = new Parse.User();\n        user.set(\"username\", name);\n        user.set(\"password\", pwd);\n        user.set(\"email\", email);\n      \n        // other fields can be set just like with Parse.Object\n        user.set(\"role\", \"ragular\");\n      \n        user.signUp().then(user => {\n            console.log(\"Successfully signed up!\");\n            setActiveUser(user);\n\n        }).catch(err => {\n            console.error(err);          \n        }).finally(() => {\n        });\n    }\n\n  \n \n    return (\n        <Container><h3> Sign up as a new user! </h3>\n        <Alert style={{display:(activeUser? \"block\" : \"none\")}} className=\"secondary\"><p>Signed up successfully - active user is detected!</p>\n            <a href=\"/\" >Back To HomePage</a>\n            </Alert>\n        <Form >\n            <Form.Group className=\"mb-3\" controlId=\"formName\">\n            <Form.Label>Your Name</Form.Label>\n            <Form.Control   type=\"text\" placeholder=\"Enter your name\" required \n                    value={'' || name} onChange={e => setName(e.target.value)} />\n                    </Form.Group><Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control   type=\"email\" placeholder=\"Enter email\" \n                    value={'' || email} onChange={e => setEmail(e.target.value)} required/>\n                <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                </Form.Text>\n            </Form.Group>\n        \n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control  type=\"password\" placeholder=\"Password\" required\n                    value={'' || pwd} onChange={e => setPwd(e.target.value)} />\n            </Form.Group>\n            <div className=\"d-grid gap-2\">\n                <Button disable={(!!activeUser ? \"disable\" : \"\")} variant=\"success\" type=\"button\" onClick={signup} >\n                    SignUp\n                </Button>\n            </div>\n        </Form>\n        </Container>\n                \n);\n}\n\nexport default SignUp;\n","import { createContext } from \"react\";\n\nconst ActiveUserContext = createContext(null);\n\nexport default ActiveUserContext;","\nclass UserMoodsModel {\n     \n    constructor(userModel){ \n        console.log(JSON.stringify(userModel));\n        this.moodDate = userModel.get(\"moodDate\");\n        this.id = userModel.id;\n        this.moodRate = userModel.get(\"moodRate\");\n        this.key = userModel.id;\n\n    }\n}\n\nexport default UserMoodsModel;","import React, { useState,useEffect,useMemo } from \"react\";\nimport { MDBContainer } from \"mdbreact\";\nimport { Bar,   Chart,   Pie } from \"react-chartjs-2\";\nimport UserModelJson from \"../model/UserModelJson\";\nimport UserModel from \"../model/UserModel\";\nimport UserMoodsModel from \"../model/UserMoodsModel\";\nimport UserMoods from \"../model/UserMoodsModel\";\nimport Parse from 'parse';\nimport Utils from '../utils/Utils';\nimport { DropdownMenu, MenuItem } from 'react-bootstrap-dropdown-menu';\nimport DDMenu from \"../components/DDMenuComponent\";\nimport { Button, Form } from 'react-bootstrap';\nimport Alert from 'react-bootstrap/Alert';\n\nfunction MoodChartsPage({activeUser}) {\n\n\tconst [selectedUser,setSelectedUser] = useState();\n\tconst [userMoods,setUserMoods] = useState([]);\n\tconst [userEmailToDisplay,setUserEmailToDisplay] = useState();\n\tconst [failedToFetchUser,setFailedToFetchUser] =useState(false);\n\tconst [data,setData] = useState({\n\t\tlabels: [],\n\t\tdatasets: [\n\t\t{\n\t\t\tlabels: [],\n\t\t\tlabel: \"\",\n\t\t\tdata: [],\n\t\t\tbackgroundColor: [\"red\", \"blue\", \"green\"], \n\t\t\thoverBackgroundColor: \"rgba(232,105,90,0.8)\",\n\t\t\tborderWidth: 1,\n\t\t\tborderColor: \"#000000\"\n\t\t}\n\t\t]\n\t});\n \tconst bar = useMemo(() =>{return <Bar data={data}\n\tstyle={{ maxHeight: '600px' }}/> }\n   ,[data]);\n\n\tfunction fetchUserByEmail() {\n\t\tUtils.parseInit();\n\t\tconst query = new Parse.Query(\"User\");\n\t\tquery.equalTo(\"email\",userEmailToDisplay).find().then((usrArr)=>{\n\t\t\tsetSelectedUser(new UserModel(usrArr[0])); \n\t\t}).catch(function(error){\n\t\t\tconsole.log(\"Error: \" + error.code + \" \" + error.message);   \n\t\t\t// todo: in alert!   \n\t\t\tconsole.log(\"Error: Failed to fetch selected user, please check your email\"); \n\t\t\tsetFailedToFetchUser(true);      \n\t\t});\n\t}\n\n\n\tfunction fetchMoodsByUser() {\n\t\tif(!selectedUser){ return; }\n\t\tconst query = new Parse.Query(\"UserMoods\");\n\t\tquery.equalTo(\"email\", userEmailToDisplay);\n\t\tquery.select(\"moodRate\",\"moodDate\").find().then(function(moods){\n\t\t\tsetUserMoods(moods.map(mood=>new UserMoodsModel(mood)));\n\t\t}).catch(function(error){\n\t\t\tconsole.log(\"Error: \" + error.code + \" \" + error.message);       \n\t\t});\n\t\n\t\tvar dates = userMoods.map(mood=> {console.log(mood.moodDate); return Utils.dateFormat(mood.moodDate);});\n\t\tvar rates = userMoods.map(mood=> {console.log(mood.moodRate); return mood.moodRate});\n\n\t\tconsole.log(\"dates:\"+dates.length+\",rates:\"+rates.length);\n\t\tconst dataCln = {...data};\n\t\tdataCln.labels = dates;\n\t\tdataCln.datasets[0].data= rates;  \n\t\tconsole.log(dataCln);\n\t\tsetData(dataCln);\n\n\t}\n\n\tuseEffect(()=>fetchMoodsByUser(),[selectedUser]);\n\n\n\nreturn (\n\t<div>\n\t\t<h4>Select user to view its mood graph:</h4>\n\t\t<Alert  style={{display:(!failedToFetchUser? \"none\" : \"block\")}} className=\"alert alert-warning\">\n\t\tError: Failed to fetch selected user, please check your email\n\t\t</Alert> \n\t\t<Form style={{display:(failedToFetchUser? \"none\" : \"block\")}} onSubmit={e=>e.preventDefault()}>\n\t\t\t<Form.Label>Enter user email to display its graphs:</Form.Label>\n\t\t \t<Form.Control type=\"email\" placeholder=\"Enter email\" \n                        value={userEmailToDisplay || ''} onChange={e => setUserEmailToDisplay(e.target.value)} />\n\t\t</Form>\n\t\t<Button className=\"button button-secondary\" onClick={fetchUserByEmail}>Show Graphs!</Button>\n\t\n\t\t<MDBContainer style={{display:(!!failedToFetchUser? \"none\" : \"block\")}}>\n\t{bar}\n\t</MDBContainer>\n\t       <Pie \n        data={data}\n\t\tlabels={data.labels}\n        width={3}\n        height={3}\n        options={{\n          legend:{display:false},\n          title: {display: true},\n        }}/>\n \n\t</div>\n\n)}\n\nexport default MoodChartsPage;\n","import HomePage from './pages/HomePage';\nimport './App.css';\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// using ES6 modules\nimport { BrowserRouter as Router, HashRouter, Route } from \"react-router-dom\";\nimport { Switch } from \"react-router\";\nimport SolutionsPage from './pages/Solutions';\n// import MoodChartPage from './pages/MoodChartPage'\nimport PlaySongActivity from './pages/PlaySongActivity'\n// Import Parse minified version\nimport Parse from 'parse/dist/parse.min.js';\nimport LoginPage from './components/LoginComponent';\nimport SignUp from './pages/SignUp';\nimport Utils from './utils/Utils';\nimport ActiveUserContext from './utils/ActiveUserContext';\nimport MoodChartsPage from './pages/MoodChartsPage';\n\nfunction App() {\n\n    // Your Parse initialization configuration goes here\n    Utils.parseInit();\n\n    const [activeUser, setActiveUser] = useState();\n\n    function logout() {\n        Parse.User.logOut();\n        setActiveUser();\n    }\n\n    return ( <\n        ActiveUserContext.Provider value = { activeUser } >\n        <\n        HashRouter >\n        <\n        Switch >\n        <\n        Route exact path = \"/signup\"\n        activeUser = { activeUser } > < SignUp / >\n        <\n        /Route>    <\n        Route exact path = \"/graphs\"\n        activeUser = { activeUser } >\n        <\n        MoodChartsPage / > < /Route>  \n\n        <\n        Route exact path = \"/solutions\"\n        activeUser = { activeUser } > < SolutionsPage / > < /Route> \n\n        <\n        Route exact path = \"/\" >\n        <\n        HomePage / >\n        <\n        /Route>\n\n        <\n        /Switch > </HashRouter > < /ActiveUserContext.Provider>\n    );\n};\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}